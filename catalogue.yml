---
- name: catalogue set up
  hosts: catalogue
  become: yes
  tasks:
  - name: Disable and enable Node.js module via dnf
    ansible.builtin.shell: |
     dnf module disable nodejs -y
     dnf module enable nodejs:18 -y
   
  - name: Install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: Create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: Create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download catalogue app code
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: Unzip the application contents into /app
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app


  - name: copy catalogue.service into systemd
    copy:
      src: /home/centos/rs_ansible/catalogue.service
      dest: /etc/systemd/system/catalogue.service
      

  - name: daemon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true


  #Start after the data load 

  - name: copy mongo repo into /etc/yum.repos.d/mongo.repo
    copy:
      src: /home/centos/rs_ansible/mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present
      

  - name: Checking the products count
    ansible.builtin.command: mongo --host mongodb.roboriya.shop --quiet --eval 'db = db.getSiblingDB("catalogue"), db.products.count()'
    register: product_count

  - name: printing the count
    ansible.builtin.debug:
      msg: "product_count: {{product_count}}"

  - name: load the catalogue data
    ansible.builtin.command: mongo --host mongodb.roboriya.shop < /app/schema/catalogue.js
    when: product_count.stdout == '0'